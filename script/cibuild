#!/usr/bin/env bash

# skip if build is triggered by pull request
if [ $TRAVIS_PULL_REQUEST == "true" ]; then
  echo "this is PR, exiting"
  exit 0
fi

set -e # exit with nonzero exit code if anything fails

# clear and re-create the build directory
rm -rf _site || exit 0;
mkdir _site;

# clone remote repo to "_site"
git clone https://{$GH_TOKEN}@github.com/jonatasleon/blog.git --branch gh-pages _site

# build with Jekyll into "_site"
bundle exec jekyll build

cd _site

# inside this git repo we'll pretend to be a new user
git config user.name "Jonatas Leon"
git config user.email "jonatas.leon@gmail.com"

# The first and only commit to this new Git repo contains all the
# files present with the commit message "Deploy to GitHub Pages".
git add --all
git commit -a -m "Travis #$TRAVIS_BUILD_NUMBER"

# Force push from the current repo's master branch to the remote
# repo's gh-pages branch. (All previous history on the gh-pages branch
# will be lost, since we are overwriting it.) We redirect any output to
# /dev/null to hide any sensitive credential data that might otherwise be exposed.
echo "pushing..."
git push --force origin gh-pages
